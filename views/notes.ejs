<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyNotes</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        let notebooks = [];  // Array to hold the created notebooks

        // Show Create Notebook form
        function showCreateNotebook() {
            const mainContent = document.getElementById('main-content');
            mainContent.innerHTML = ` 
                <div class="p-8">
                    <h1 class="text-3xl font-bold mb-8">Create Notebook</h1>
                    <div class="space-y-6">
                        <div>
                            <label class="block text-gray-700 mb-2">Title</label>
                            <input id="notebook-title" type="text" placeholder="Notebook Title" class="w-full p-3 border rounded-lg">
                        </div>
                        <div>
                            <label class="block text-gray-700 mb-2">Content</label>
                            <textarea id="notebook-content" placeholder="Write your notebook..." class="w-full h-48 p-3 border rounded-lg"></textarea>
                        </div>
                        <button onclick="saveNotebook()" class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600">
                            Save Notebook
                        </button>
                    </div>
                </div>
            `;
        }

        // Save new notebook to the list and MongoDB
        function saveNotebook() {
            const title = document.getElementById('notebook-title').value;
            const content = document.getElementById('notebook-content').value;
            if (title && content) {
                const notebook = {
                    title: title,
                    content: content
                };

                // Send notebook data to the backend API
                fetch('http://localhost:3000/save-notebook', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(notebook)
                })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    renderNotebooks(); // Re-render the list of notebooks
                    document.getElementById('notebook-title').value = '';
                    document.getElementById('notebook-content').value = '';
                    showMyNotebooks();
                })
                .catch(error => {
                    alert('Error saving notebook: ' + error.message);
                });
            } else {
                alert('Please fill in both title and content');
            }
        }

        // Render the notebooks list under "My Notebooks"
        function renderNotebooks() {
            const notebooksList = document.getElementById('my-notebooks-list');
            notebooksList.innerHTML = ''; // Clear existing list

            fetch('http://localhost:3000/api/notebooks')
    .then(response => response.json())
    .then(data => {
        data.forEach((notebook, index) => {
            const notebookElement = document.createElement('div');
            notebookElement.classList.add('flex', 'flex-col', 'p-4', 'bg-white', 'rounded-lg', 'shadow-md', 'hover:bg-gray-50', 'cursor-pointer', 'space-y-4');
            notebookElement.innerHTML = `
                <h3 class="text-xl font-bold text-gray-800">${notebook.title}</h3>
                <p class="text-gray-600 truncate">${notebook.content}</p>
                <div class="flex items-center justify-between">
                    </button>
                    <button onclick="deleteNotebook('${notebook._id}')" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600">
                        Delete
                    </button>
                </div>
            `;
            notebooksList.appendChild(notebookElement);
        });
    })
    .catch(error => {
        alert('Error fetching notebooks: ' + error.message);
    });
        }

        // Show the "My Notebooks" section
        function showMyNotebooks() {
            const mainContent = document.getElementById('main-content');
            mainContent.innerHTML = `
                <h1 class="text-3xl font-bold mb-8">My Notebooks</h1>
                <div id="my-notebooks-list" class="space-y-4"></div>
            `;
            renderNotebooks(); // Call renderNotebooks after the element exists
        }

        // View notebook details
        function viewNotebook(id) {
            fetch(`http://localhost:3000/api/notebooks/${id}`)
                .then(response => response.json())
                .then(data => {
                    const mainContent = document.getElementById('main-content');
                    mainContent.innerHTML = `
                        <div class="p-8">
                            <h1 class="text-3xl font-bold mb-8">${data.title}</h1>
                            <p class="text-lg text-gray-700">${data.content}</p>
                            <button onclick="showMyNotebooks()" class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 mt-4">Back to Notebooks</button>
                        </div>
                    `;
                })
                .catch(error => {
                    alert('Error fetching notebook details: ' + error.message);
                });
        }

        // Delete a notebook
        function deleteNotebook(id) {
            if (confirm('Are you sure you want to delete this notebook?')) {
                fetch(`http://localhost:3000/delete-notebook/${id}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    renderNotebooks(); // Re-render the list of notebooks
                })
                .catch(error => {
                    alert('Error deleting notebook: ' + error.message);
                });
            }
        }
    </script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/mark.css">
</head>

<body class="bg-gray-100">
    
    <div class="flex">
        <!-- Sidebar -->
        <div class="fixed left-0 top-0 w-64 h-screen bg-white shadow-lg overflow-y-auto">
            <!-- Logo Section -->
            <div class="flex items-center p-4 border-b border-gray-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600 mr-2" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <h1 class="text-xl font-bold text-gray-800">MyNotes</h1>
            </div>
            <!-- Navigation Sections -->
            <nav class="py-4">
                <!-- Notebooks Section -->
                <div>
                    <div onclick="showCreateNotebook()" class="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-gray-500" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                        </svg>
                        <span class="font-medium text-gray-700">Notebooks</span>
                    </div>
                    <div onclick="showMyNotebooks()" class="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-gray-500" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8c-4.418 0-8 1.79-8 4s3.582 4 8 4 8-1.79 8-4-3.582-4-8-4zm0 6c-2.211 0-4-1.134-4-2.5S9.789 9 12 9s4 1.134 4 2.5-1.789 2.5-4 2.5z" />
                        </svg>
                        <span class="font-medium text-gray-700">My Notebooks</span>
                    </div>
                </div>
            </nav>
        </div>

        <!-- Main Content Area -->
        <div class="ml-64 p-8 w-full" id="main-content">
            <h1 class="text-3xl font-bold mb-8">Welcome to MyNotes</h1>
            <p class="text-lg text-gray-700">Start writing your notes or ideas here!</p>
        </div>
    </div>
</body>

</html>
